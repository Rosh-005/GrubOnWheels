package servlet;

import java.io.BufferedReader;
import java.io.IOException;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.google.gson.Gson;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

import model.ChatMessage;

@WebServlet("/ChatHistoryServlet")
public class ChatHistoryServlet extends HttpServlet{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	@Override
	protected synchronized void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	    HttpSession session = request.getSession();
	    
	    // Read the request body to get the JSON data
	    BufferedReader reader = request.getReader();
	    StringBuilder requestBody = new StringBuilder();
	    String line;
	    while ((line = reader.readLine()) != null) {
	        requestBody.append(line);
	    }
	    
	    // Parse the JSON data to retrieve the selUserID
	    JsonObject jsonObject = new JsonParser().parse(requestBody.toString()).getAsJsonObject();
	    String selUserID = jsonObject.get("selUserID").getAsString();

	    // Assuming you have the userChatHistories map stored in the session
	    Map<String, List<ChatMessage>> userChatHistories = (Map<String, List<ChatMessage>>) session.getAttribute("userChatHistories");
	    
	    if (userChatHistories != null) {
	        List<ChatMessage> chatHistory = userChatHistories.get(selUserID);

	        if (chatHistory != null) {
	            // Convert chat history to JSON
	            Gson gson = new Gson();
	            String json = gson.toJson(chatHistory);

	            // Send JSON response
	            response.setContentType("application/json");
	            response.setCharacterEncoding("UTF-8");
	            response.getWriter().write(json);
	        } else {
	            // Handle case where chat history is not found for selUserID
	            response.setStatus(HttpServletResponse.SC_NOT_FOUND);
	        }
	    } else {
	        // Handle case where userChatHistories is not found in session
	        response.setStatus(HttpServletResponse.SC_NOT_FOUND);
	    }
	}

}
